<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
use PhpOffice\PhpSpreadsheet\IOFactory;
use PhpOffice\PhpSpreadsheet\Helper\Sample;

class Mapel extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Mapel_model');

        // cek user login
        check_login();
    } 

    /*
     * Listing of mapel
     */
    function index()
    {
        $data['mapel'] = $this->Mapel_model->get_all_mapel();
        
        $data['_view'] = 'mapel/index';
        $this->load->view('template/header',$data);
        $this->load->view('template/sidebar',$data);
        $this->load->view('mapel/index',$data);
        $this->load->view('template/footer',$data);

    }

    /*
     * Adding a new mapel
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('nama','Nama','required');
		$this->form_validation->set_rules('kelompok','Kelompok','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'kelompok' => $this->input->post('kelompok'),
				'nama' => $this->input->post('nama'),
				'kode' => $this->input->post('kode'),
            );
            
            $mapel_id = $this->Mapel_model->add_mapel($params);
            $this->session->set_flashdata('berhasil', 'Anda berhasil menambahkan data mata pelajaran <strong>'.$params['nama'].'</strong>');

            redirect('mapel/index');
        }
        else
        {            
            $data['_view'] = 'mapel/add';
            $this->load->view('template/header',$data);
            $this->load->view('template/sidebar',$data);
            $this->load->view('mapel/add',$data);
            $this->load->view('template/footer',$data);
        
        }
    }  

    /*
     * Editing a mapel
     */
    function edit($id)
    {   
        // check if the mapel exists before trying to edit it
        $data['mapel'] = $this->Mapel_model->get_mapel($id);
        
        if(isset($data['mapel']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('nama','Nama','required');
			$this->form_validation->set_rules('kelompok','Kelompok','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'kelompok' => $this->input->post('kelompok'),
					'nama' => $this->input->post('nama'),
					'kode' => $this->input->post('kode'),
                );

                $this->Mapel_model->update_mapel($id,$params);  
                $this->session->set_flashdata('berhasil', 'Anda berhasil mengubah data mata pelajaran <strong>'.$params['nama_lengkap'].'</strong>');
                redirect('mapel/index');
            }
            else
            {
                $data['_view'] = 'mapel/edit';
                $this->load->view('template/header',$data);
                $this->load->view('template/sidebar',$data);
                $this->load->view('mapel/edit',$data);
                $this->load->view('template/footer',$data);
            }
        }
        else
            show_error('The mapel you are trying to edit does not exist.');
    } 

    /*
     * Deleting mapel
     */
    function remove($id)
    {
        $mapel = $this->Mapel_model->get_mapel($id);

        // check if the mapel exists before trying to delete it
        if(isset($mapel['id']))
        {
            $this->session->set_flashdata('hapus', 'Anda berhasil menghapus data mata pelajaran <strong>'.$guru['nama_lengkap'].'</strong>');
            $this->Mapel_model->delete_mapel($id);
            redirect('mapel/index');
        }
        else
            show_error('The mapel you are trying to delete does not exist.');
    }

    /*
    * upload mapel 
    */
    function do_upload()
    {
        $file_ext = pathinfo($_FILES["userfile"]["name"], PATHINFO_EXTENSION);

        $config['upload_path']          = './uploads/';
        $config['allowed_types']        = 'xlsx|xls|csv';
        $config['overwrite']             = true;
        $config['file_name']             = 'mapel';

        $this->load->library('upload', $config);

        if ( ! $this->upload->do_upload('userfile'))
        {
                $error = array('error' => $this->upload->display_errors());
                print_r($error);
        }
        else
        {
                $data = array('upload_data' => $this->upload->data());
                
                $helper = new Sample();
                $inputFileName = 'uploads/mapel.'.$file_ext;
                $helper->log('Loading file ' . pathinfo($inputFileName, PATHINFO_BASENAME) . ' using IOFactory to identify the format');
                $spreadsheet = IOFactory::load($inputFileName);
                $sheetData = $spreadsheet->getActiveSheet()->toArray(null, true, true, true);
                $highestRow = $spreadsheet->getActiveSheet()->getHighestRow();
                
                // hitung jumlah data yang di upload
                $jumlahData = $highestRow - 1;
                $dataAwal = array();
                foreach($sheetData as $s) 
                {
                    array_push($dataAwal, array(
                        'kelompok' => $s['A'],
                        'nama' => $s['B'],
                        'kode' => $s['C']
                    ));
                }
                // $dataAwal membaca semua data yang ada di excel termasuk nama kolom
                // $dataAkhir membaca $dataAwal dari array urutan ke 2
                $dataAkhir = array_slice($dataAwal, 1);
                
                $this->db->insert_batch('mapel', $dataAkhir);
                unlink($inputFileName);
                redirect('mapel');
        }
    }

    function download_template_mapel()
    {
        force_download('downloads/template_mapel.xlsx', null);
    }

    function delete_all_mapel()
    {
        $this->db->empty_table('mapel'); // Produces: DELETE FROM guru
        redirect('mapel');
    }
    
}